/**
 * This class is generated by jOOQ
 */
package models.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hits extends org.jooq.impl.TableImpl<models.tables.records.HitsRecord> {

	private static final long serialVersionUID = -425505111;

	/**
	 * The singleton instance of <code>PUBLIC.HITS</code>
	 */
	public static final models.tables.Hits HITS = new models.tables.Hits();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<models.tables.records.HitsRecord> getRecordType() {
		return models.tables.records.HitsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.HITS.ID</code>.
	 */
	public final org.jooq.TableField<models.tables.records.HitsRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.HITS.URL_ID</code>.
	 */
	public final org.jooq.TableField<models.tables.records.HitsRecord, java.lang.Integer> URL_ID = createField("URL_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.HITS.CREATED_AT</code>.
	 */
	public final org.jooq.TableField<models.tables.records.HitsRecord, java.sql.Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>PUBLIC.HITS</code> table reference
	 */
	public Hits() {
		this("HITS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.HITS</code> table reference
	 */
	public Hits(java.lang.String alias) {
		this(alias, models.tables.Hits.HITS);
	}

	private Hits(java.lang.String alias, org.jooq.Table<models.tables.records.HitsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Hits(java.lang.String alias, org.jooq.Table<models.tables.records.HitsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, models.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<models.tables.records.HitsRecord, java.lang.Integer> getIdentity() {
		return models.Keys.IDENTITY_HITS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<models.tables.records.HitsRecord> getPrimaryKey() {
		return models.Keys.CONSTRAINT_21;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<models.tables.records.HitsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<models.tables.records.HitsRecord>>asList(models.Keys.CONSTRAINT_21);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<models.tables.records.HitsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<models.tables.records.HitsRecord, ?>>asList(models.Keys.CONSTRAINT_21D);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public models.tables.Hits as(java.lang.String alias) {
		return new models.tables.Hits(alias, this);
	}

	/**
	 * Rename this table
	 */
	public models.tables.Hits rename(java.lang.String name) {
		return new models.tables.Hits(name, null);
	}
}
